'''
You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.

A string is called palindrome if is one that reads the same backward as well as forward.
'''
class Solution:
    def removePalindromeSub(self, s: str, n=0) -> int:
        right = len(s)//2
        left = right if len(s) % 2 else right-1
        while left > -1 and right < len(s):
            if s[left] != s[right]:
                return 2 # if not palindrome, remove all a's, then all b's for 2
            left -= 1
            right += 1
        return 1
